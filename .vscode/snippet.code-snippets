{
  // Place your ClientV3 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Scss Component Mode": {
    "scope": "scss",
    "prefix": "unScssComponentMode",
    "body": [
      "@mixin ${1:ComponentMode}(\\$config, \\$color){",
      "\t\\$name: map-get(\\$config, name);",
      "\t$3",
      "}"
    ],
    "description": "Scss Component"
  },

  "Scss Component Simple": {
    "scope": "scss",
    "prefix": "unScssComponentSimple",
    "body": [
      "@mixin ${1:ComponentSimple}(\\$config, \\$color){",
      "\t\\$name: map-get(\\$config, name);",
      "\t$3",
      "}"
    ],
    "description": "Scss Component"
  },

  "Include Scss Component Simple": {
    "scope": "scss",
    "prefix": "unIncludeScssComponentSimple",
    "body": [
      "@include ${1:ComponentName}.ComponentSimple(\\$config, \\$color)"
    ],
    "description": "Include Scss Component"
  },

  "Include Scss Component Mode": {
    "scope": "scss",
    "prefix": "unIncludeScssComponentMode",
    "body": ["@include ${1:ComponentName}.ComponentMode(\\$config, \\$color)"],
    "description": "Include Scss Component"
  },

  "Innit Class Props": {
    "scope": "vue",
    "prefix": "unInnitClassProps",
    "body": [
      "<script>",
      "import { classProps } from '../../../../../../Themes/Themes.config';",
      "export default {",
      "\tinject: {",
      "\t\tthemes: \"themes\"",
      "\t},",
      "\tdata() {",
      "\t\treturn {",
      "\t\t\tclass: classProps(themes)",
      "\t\t}\n\t}\n};",
      "</script>"
    ],
    "description": "Innit Class Props"
  },
  "New Class Scss": {
    "scope": "scss",
    "prefix": "unClassName",
    "body": [".#{\\$name}-${1:className}{", "\t", "}"],
    "description": "Include Scss Component"
  },

  "Init Scss Module Form": {
    "scope": "scss",
    "prefix": "unScssModuleForm",
    "body": [
      "@use \"/giaodien/modes/mode.scss\" as Mode;",
      "\\$config: Mode.\\$config;",
      "\\$name: map-get(Mode.\\$config, name);",
      "\\$colorNormal: Mode.\\$colorNormal;",
      "\\$colorDark: Mode.\\$colorDark;\n\n\n",
      "[mode=\"dark\"]{\n\n}"
    ],
    "description": "Include Scss Component"
  },

  "Export default": {
    "scope": "vue, javascript",
    "prefix": "unExportDefault",
    "body": [
      "import { _cname } from '~~/giaodien/giaodien';",

      "export default {",
      "  data() {",
      "        return {",
      "            _c: _cname(this.\\$style)",
      "        }",
      "    }",
      "}"
    ],
    "description": "Export default"
  },

  "Add element with class": {
    "scope": "vue, html",
    "prefix": "unElementWithClass",
    "body": [
      "<div :class=\"[_c(['']), _nc([''])]\"></div>",
    ],
    "description": "Export default"
  },

  "Add class in element": {
    "scope": "vue, html",
    "prefix": "unAddClassInElement",
    "body": [
      ":class=\"[_c(['']), _nc([''])]\"",
    ],
    "description": "Export default"
  },
}



