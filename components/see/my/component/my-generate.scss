@use "/giaodien/modes/mode.scss" as Mode;
$config: Mode.$config;
$name: map-get(Mode.$config, name);
$colorNormal: Mode.$colorNormal;
$colorDark: Mode.$colorDark;

//my config
$screen: (
  xs: 200px,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

$peace: 12;
$defaultColumnSpace: 5px;

$ratio: (
  1x1: 1,
  2x3: calc(3 / 2),
  3x4: calc(4 / 3),
  16x9: calc(9 / 16),
  21x9: calc(9 / 21),
);

$spacer: (
  mt: "margin-top",
  mb: "margin-bottom",
  ml: "margin-left",
  mr: "margin-right",
  pt: "padding-top",
  pb: "padding-bottom",
  pl: "padding-left",
  pr: "padding-right",
  mx: (
    "margin-left",
    "margin-right",
  ),
  my: (
    "margin-top",
    "margin-bottom",
  ),
  px: (
    "padding-left",
    "padding-right",
  ),
  py: (
    "padding-top",
    "padding-bottom",
  ),
);

@mixin components($point: false) {
  $p: "";
  @if $point != false {
    $p: -#{$point};
  }
  @for $var from 1 to calc($peace + 1) {
    .#{$name}-row-col#{$p}-#{$var} {
      & .#{$name}-col {
        width: calc((100 / $var) * 1% - calc($defaultColumnSpace * 2));
        padding: $defaultColumnSpace;
      }
    }
    .#{$name}-col#{$p}-#{$var} {
      width: calc((100 / $peace) * $var * 1% - calc($defaultColumnSpace * 2));
      padding: $defaultColumnSpace;
    }

    .#{$name}-gap#{$p}-#{$var} {
      margin: calc((-3px * $var) - $defaultColumnSpace);
      & .#{$name}-col-container {
        margin: calc(3px * $var);
      }
    }

    @each $namec, $itemName in $spacer {
      $subitemls: map-get($spacer, $namec);
      
      @if length($subitemls) > 0 {
        .#{$name}-#{$namec}#{$p}-#{$var} {
          @each $subitem in $subitemls {
            #{$subitem}: calc($defaultColumnSpace * $var);
          }
        }
      } @else {
        .#{$name}-#{$namec}#{$p}-#{$var} {
          #{$itemName}: calc($defaultColumnSpace * $var);
        }
      }
    }

    
  }
}
@include components();

@each $point, $size in $screen {
  @media (min-width: $size) {
    @include components($point);
  }
}

@each $item, $val in $ratio {
  .#{$name}-ratio-#{$item} {
    width: 100%;
    padding-top: calc(100% * #{$val});
    position: relative;
  }
}
