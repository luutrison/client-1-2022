const icssTranslate = {
  accentColor: "accent-color",
  alignContent: "align-content",
  alignItems: "align-items",
  alignSelf: "align-self",
  alignmentBaseline: "alignment-baseline",
  all: "all",
  animation: "animation",
  animationDelay: "animation-delay",
  animationDirection: "animation-direction",
  animationDuration: "animation-duration",
  animationFillMode: "animation-fill-mode",
  animationIterationCount: "animation-iteration-count",
  animationName: "animation-name",
  animationPlayState: "animation-play-state",
  animationTimingFunction: "animation-timing-function",
  appearance: "appearance",
  aspectRatio: "aspect-ratio",
  backdropFilter: "backdrop-filter",
  backfaceVisibility: "backface-visibility",
  background: "background",
  backgroundAttachment: "background-attachment",
  backgroundBlendMode: "background-blend-mode",
  backgroundClip: "background-clip",
  backgroundColor: "background-color",
  backgroundImage: "background-image",
  backgroundOrigin: "background-origin",
  backgroundPosition: "background-position",
  backgroundPositionX: "background-position-x",
  backgroundPositionY: "background-position-y",
  backgroundRepeat: "background-repeat",
  backgroundSize: "background-size",
  baselineShift: "baseline-shift",
  blockSize: "block-size",
  border: "border",
  borderBlock: "border-block",
  borderBlockColor: "border-block-color",
  borderBlockEnd: "border-block-end",
  borderBlockEndColor: "border-block-end-color",
  borderBlockEndStyle: "border-block-end-style",
  borderBlockEndWidth: "border-block-end-width",
  borderBlockStart: "border-block-start",
  borderBlockStartColor: "border-block-start-color",
  borderBlockStartStyle: "border-block-start-style",
  borderBlockStartWidth: "border-block-start-width",
  borderBlockStyle: "border-block-style",
  borderBlockWidth: "border-block-width",
  borderBottom: "border-bottom",
  borderBottomColor: "border-bottom-color",
  borderBottomLeftRadius: "border-bottom-left-radius",
  borderBottomRightRadius: "border-bottom-right-radius",
  borderBottomStyle: "border-bottom-style",
  borderBottomWidth: "border-bottom-width",
  borderCollapse: "border-collapse",
  borderColor: "border-color",
  borderEndEndRadius: "border-end-end-radius",
  borderEndStartRadius: "border-end-start-radius",
  borderImage: "border-image",
  borderImageOutset: "border-image-outset",
  borderImageRepeat: "border-image-repeat",
  borderImageSlice: "border-image-slice",
  borderImageSource: "border-image-source",
  borderImageWidth: "border-image-width",
  borderInline: "border-inline",
  borderInlineColor: "border-inline-color",
  borderInlineEnd: "border-inline-end",
  borderInlineEndColor: "border-inline-end-color",
  borderInlineEndStyle: "border-inline-end-style",
  borderInlineEndWidth: "border-inline-end-width",
  borderInlineStart: "border-inline-start",
  borderInlineStartColor: "border-inline-start-color",
  borderInlineStartStyle: "border-inline-start-style",
  borderInlineStartWidth: "border-inline-start-width",
  borderInlineStyle: "border-inline-style",
  borderInlineWidth: "border-inline-width",
  borderLeft: "border-left",
  borderLeftColor: "border-left-color",
  borderLeftStyle: "border-left-style",
  borderLeftWidth: "border-left-width",
  borderRadius: "border-radius",
  borderRight: "border-right",
  borderRightColor: "border-right-color",
  borderRightStyle: "border-right-style",
  borderRightWidth: "border-right-width",
  borderSpacing: "border-spacing",
  borderStartEndRadius: "border-start-end-radius",
  borderStartStartRadius: "border-start-start-radius",
  borderStyle: "border-style",
  borderTop: "border-top",
  borderTopColor: "border-top-color",
  borderTopLeftRadius: "border-top-left-radius",
  borderTopRightRadius: "border-top-right-radius",
  borderTopStyle: "border-top-style",
  borderTopWidth: "border-top-width",
  borderWidth: "border-width",
  bottom: "bottom",
  boxShadow: "box-shadow",
  boxSizing: "box-sizing",
  breakAfter: "break-after",
  breakBefore: "break-before",
  breakInside: "break-inside",
  captionSide: "caption-side",
  caretColor: "caret-color",
  clear: "clear",
  clip: "clip",
  clipPath: "clip-path",
  clipRule: "clip-rule",
  color: "color",
  colorInterpolation: "color-interpolation",
  colorInterpolationFilters: "color-interpolation-filters",
  colorScheme: "color-scheme",
  columnCount: "column-count",
  columnFill: "column-fill",
  columnGap: "column-gap",
  columnRule: "column-rule",
  columnRuleColor: "column-rule-color",
  columnRuleStyle: "column-rule-style",
  columnRuleWidth: "column-rule-width",
  columnSpan: "column-span",
  columnWidth: "column-width",
  columns: "columns",
  contain: "contain",
  content: "content",
  counterIncrement: "counter-increment",
  counterReset: "counter-reset",
  counterSet: "counter-set",
  cssFloat: "css-float",
  cssText: "css-text",
  cursor: "cursor",
  direction: "direction",
  display: "display",
  dominantBaseline: "dominant-baseline",
  emptyCells: "empty-cells",
  fill: "fill",
  fillOpacity: "fill-opacity",
  fillRule: "fill-rule",
  filter: "filter",
  flex: "flex",
  flexBasis: "flex-basis",
  flexDirection: "flex-direction",
  flexFlow: "flex-flow",
  flexGrow: "flex-grow",
  flexShrink: "flex-shrink",
  flexWrap: "flex-wrap",
  float: "float",
  floodColor: "flood-color",
  floodOpacity: "flood-opacity",
  font: "font",
  fontFamily: "font-family",
  fontFeatureSettings: "font-feature-settings",
  fontKerning: "font-kerning",
  fontOpticalSizing: "font-optical-sizing",
  fontPalette: "font-palette",
  fontSize: "font-size",
  fontSizeAdjust: "font-size-adjust",
  fontStretch: "font-stretch",
  fontStyle: "font-style",
  fontSynthesis: "font-synthesis",
  fontVariant: "font-variant",
  fontVariantAlternates: "font-variant-alternates",
  fontVariantCaps: "font-variant-caps",
  fontVariantEastAsian: "font-variant-east-asian",
  fontVariantLigatures: "font-variant-ligatures",
  fontVariantNumeric: "font-variant-numeric",
  fontVariantPosition: "font-variant-position",
  fontVariationSettings: "font-variation-settings",
  fontWeight: "font-weight",
  gap: "gap",
  grid: "grid",
  gridArea: "grid-area",
  gridAutoColumns: "grid-auto-columns",
  gridAutoFlow: "grid-auto-flow",
  gridAutoRows: "grid-auto-rows",
  gridColumn: "grid-column",
  gridColumnEnd: "grid-column-end",
  gridColumnGap: "grid-column-gap",
  gridColumnStart: "grid-column-start",
  gridGap: "grid-gap",
  gridRow: "grid-row",
  gridRowEnd: "grid-row-end",
  gridRowGap: "grid-row-gap",
  gridRowStart: "grid-row-start",
  gridTemplate: "grid-template",
  gridTemplateAreas: "grid-template-areas",
  gridTemplateColumns: "grid-template-columns",
  gridTemplateRows: "grid-template-rows",
  height: "height",
  hyphens: "hyphens",
  imageOrientation: "image-orientation",
  imageRendering: "image-rendering",
  inlineSize: "inline-size",
  inset: "inset",
  insetBlock: "inset-block",
  insetBlockEnd: "inset-block-end",
  insetBlockStart: "inset-block-start",
  insetInline: "inset-inline",
  insetInlineEnd: "inset-inline-end",
  insetInlineStart: "inset-inline-start",
  isolation: "isolation",
  justifyContent: "justify-content",
  justifyItems: "justify-items",
  justifySelf: "justify-self",
  left: "left",
  letterSpacing: "letter-spacing",
  lightingColor: "lighting-color",
  lineBreak: "line-break",
  lineHeight: "line-height",
  listStyle: "list-style",
  listStyleImage: "list-style-image",
  listStylePosition: "list-style-position",
  listStyleType: "list-style-type",
  margin: "margin",
  marginBlock: "margin-block",
  marginBlockEnd: "margin-block-end",
  marginBlockStart: "margin-block-start",
  marginBottom: "margin-bottom",
  marginInline: "margin-inline",
  marginInlineEnd: "margin-inline-end",
  marginInlineStart: "margin-inline-start",
  marginLeft: "margin-left",
  marginRight: "margin-right",
  marginTop: "margin-top",
  marker: "marker",
  markerEnd: "marker-end",
  markerMid: "marker-mid",
  markerStart: "marker-start",
  mask: "mask",
  maskClip: "mask-clip",
  maskComposite: "mask-composite",
  maskImage: "mask-image",
  maskMode: "mask-mode",
  maskOrigin: "mask-origin",
  maskPosition: "mask-position",
  maskRepeat: "mask-repeat",
  maskSize: "mask-size",
  maskType: "mask-type",
  maxBlockSize: "max-block-size",
  maxHeight: "max-height",
  maxInlineSize: "max-inline-size",
  maxWidth: "max-width",
  minBlockSize: "min-block-size",
  minHeight: "min-height",
  minInlineSize: "min-inline-size",
  minWidth: "min-width",
  mixBlendMode: "mix-blend-mode",
  objectFit: "object-fit",
  objectPosition: "object-position",
  offset: "offset",
  offsetDistance: "offset-distance",
  offsetPath: "offset-path",
  offsetRotate: "offset-rotate",
  opacity: "opacity",
  order: "order",
  orphans: "orphans",
  outline: "outline",
  outlineColor: "outline-color",
  outlineOffset: "outline-offset",
  outlineStyle: "outline-style",
  outlineWidth: "outline-width",
  overflow: "overflow",
  overflowAnchor: "overflow-anchor",
  overflowWrap: "overflow-wrap",
  overflowX: "overflow-x",
  overflowY: "overflow-y",
  overscrollBehavior: "overscroll-behavior",
  overscrollBehaviorBlock: "overscroll-behavior-block",
  overscrollBehaviorInline: "overscroll-behavior-inline",
  overscrollBehaviorX: "overscroll-behavior-x",
  overscrollBehaviorY: "overscroll-behavior-y",
  padding: "padding",
  paddingBlock: "padding-block",
  paddingBlockEnd: "padding-block-end",
  paddingBlockStart: "padding-block-start",
  paddingBottom: "padding-bottom",
  paddingInline: "padding-inline",
  paddingInlineEnd: "padding-inline-end",
  paddingInlineStart: "padding-inline-start",
  paddingLeft: "padding-left",
  paddingRight: "padding-right",
  paddingTop: "padding-top",
  pageBreakAfter: "page-break-after",
  pageBreakBefore: "page-break-before",
  pageBreakInside: "page-break-inside",
  paintOrder: "paint-order",
  perspective: "perspective",
  perspectiveOrigin: "perspective-origin",
  placeContent: "place-content",
  placeItems: "place-items",
  placeSelf: "place-self",
  pointerEvents: "pointer-events",
  position: "position",
  printColorAdjust: "print-color-adjust",
  quotes: "quotes",
  resize: "resize",
  right: "right",
  rotate: "rotate",
  rowGap: "row-gap",
  rubyPosition: "ruby-position",
  scale: "scale",
  scrollBehavior: "scroll-behavior",
  scrollMargin: "scroll-margin",
  scrollMarginBlock: "scroll-margin-block",
  scrollMarginBlockEnd: "scroll-margin-block-end",
  scrollMarginBlockStart: "scroll-margin-block-start",
  scrollMarginBottom: "scroll-margin-bottom",
  scrollMarginInline: "scroll-margin-inline",
  scrollMarginInlineEnd: "scroll-margin-inline-end",
  scrollMarginInlineStart: "scroll-margin-inline-start",
  scrollMarginLeft: "scroll-margin-left",
  scrollMarginRight: "scroll-margin-right",
  scrollMarginTop: "scroll-margin-top",
  scrollPadding: "scroll-padding",
  scrollPaddingBlock: "scroll-padding-block",
  scrollPaddingBlockEnd: "scroll-padding-block-end",
  scrollPaddingBlockStart: "scroll-padding-block-start",
  scrollPaddingBottom: "scroll-padding-bottom",
  scrollPaddingInline: "scroll-padding-inline",
  scrollPaddingInlineEnd: "scroll-padding-inline-end",
  scrollPaddingInlineStart: "scroll-padding-inline-start",
  scrollPaddingLeft: "scroll-padding-left",
  scrollPaddingRight: "scroll-padding-right",
  scrollPaddingTop: "scroll-padding-top",
  scrollSnapAlign: "scroll-snap-align",
  scrollSnapStop: "scroll-snap-stop",
  scrollSnapType: "scroll-snap-type",
  scrollbarGutter: "scrollbar-gutter",
  shapeImageThreshold: "shape-image-threshold",
  shapeMargin: "shape-margin",
  shapeOutside: "shape-outside",
  shapeRendering: "shape-rendering",
  stopColor: "stop-color",
  stopOpacity: "stop-opacity",
  stroke: "stroke",
  strokeDasharray: "stroke-dasharray",
  strokeDashoffset: "stroke-dashoffset",
  strokeLinecap: "stroke-linecap",
  strokeLinejoin: "stroke-linejoin",
  strokeMiterlimit: "stroke-miterlimit",
  strokeOpacity: "stroke-opacity",
  strokeWidth: "stroke-width",
  tabSize: "tab-size",
  tableLayout: "table-layout",
  textAlign: "text-align",
  textAlignLast: "text-align-last",
  textAnchor: "text-anchor",
  textCombineUpright: "text-combine-upright",
  textDecoration: "text-decoration",
  textDecorationColor: "text-decoration-color",
  textDecorationLine: "text-decoration-line",
  textDecorationSkipInk: "text-decoration-skip-ink",
  textDecorationStyle: "text-decoration-style",
  textDecorationThickness: "text-decoration-thickness",
  textEmphasis: "text-emphasis",
  textEmphasisColor: "text-emphasis-color",
  textEmphasisPosition: "text-emphasis-position",
  textEmphasisStyle: "text-emphasis-style",
  textIndent: "text-indent",
  textOrientation: "text-orientation",
  textOverflow: "text-overflow",
  textRendering: "text-rendering",
  textShadow: "text-shadow",
  textTransform: "text-transform",
  textUnderlineOffset: "text-underline-offset",
  textUnderlinePosition: "text-underline-position",
  top: "top",
  touchAction: "touch-action",
  transform: "transform",
  transformBox: "transform-box",
  transformOrigin: "transform-origin",
  transformStyle: "transform-style",
  transition: "transition",
  transitionDelay: "transition-delay",
  transitionDuration: "transition-duration",
  transitionProperty: "transition-property",
  transitionTimingFunction: "transition-timing-function",
  translate: "translate",
  unicodeBidi: "unicode-bidi",
  userSelect: "user-select",
  verticalAlign: "vertical-align",
  visibility: "visibility",
  whiteSpace: "white-space",
  widows: "widows",
  width: "width",
  willChange: "will-change",
  wordBreak: "word-break",
  wordSpacing: "word-spacing",
  wordWrap: "word-wrap",
  writingMode: "writing-mode",
  zIndex: "z-index",
};

const generateMap = () => {
  try {
    const RuleChange = [..."abcdefghijklmnopqrstuvwxyz"];
    var objCssTranlate = {};

    for (const key in icssTranslate) {
      var namear = [...key];
      RuleChange.forEach((element) => {
        const index = [];
        namear.forEach((e, i) => {
          if (e === element.toUpperCase() && !index.find((x) => x === i)) {
            index.push(i);
          }
        });
        index.forEach((i) => {
          namear[i] = "-" + element;
        });
      });
      objCssTranlate[key] = namear.join("");
    }

    return objCssTranlate;
  } catch (error) {
    console.error(error);
  }
};

export { generateMap, icssTranslate };
